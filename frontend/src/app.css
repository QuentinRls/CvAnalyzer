@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/* Apply theme variables to document background and text color */
body {
  background-color: var(--bg);
  color: var(--text);
}

/* Dark mode variables (toggle by adding 'dark' class to <html> or <body>) */
:root {
  --bg: #ffffff;
  --muted: #6b7280;
  --card-bg: #ffffff;
  --text: #111827;
  --accent: #f8485d;
}

.dark {
  --bg: #0b1220;
  --muted: #9ca3af;
  --card-bg: #071021;
  --text: #e6eef8;
  --accent: #ff6b78;
}

/* Global overrides for common Tailwind utility classes in dark mode.
   These rules use !important to override compiled Tailwind utilities so the
   existing markup adopts the dark palette without rewriting components. */
.dark .bg-white { background-color: var(--card-bg) !important; }
.dark .bg-gray-50 { background-color: transparent !important; }
.dark .bg-gray-100 { background-color: #0f1724 !important; }
.dark .bg-gray-200 { background-color: #111827 !important; }
.dark .bg-gray-200, .dark .bg-gray-300 { background-color: rgba(255,255,255,0.03) !important; }

.dark .text-gray-900, .dark .text-gray-800 { color: var(--text) !important; }
.dark .text-gray-700, .dark .text-gray-600, .dark .text-gray-500, .dark .text-gray-400 { color: var(--muted) !important; }

.dark .border-gray-200, .dark .border-gray-100, .dark .border-gray-300 { border-color: rgba(255,255,255,0.06) !important; }

.dark .shadow-sm { box-shadow: 0 1px 2px rgba(2,6,23,0.6) !important; }

.dark .card, .dark .card * { color: var(--text) !important; }

.dark .bg-red-50 { background-color: rgba(248,72,93,0.06) !important; }
.dark .text-blue-600 { color: #60a5fa !important; }

/* Buttons: invert light backgrounds to darker surfaces while preserving accents */
.dark .bg-gray-100 { background-color: rgba(255,255,255,0.03) !important; }
.dark .bg-white { background-color: var(--card-bg) !important; }

/* Strong overrides to ensure page backgrounds and gradients go dark
   Targets common containers and gradient utilities used throughout the app. */
.dark .min-h-screen,
.dark [class*="bg-gradient"],
.dark [class*="from-"],
.dark [class*="via-"],
.dark [class*="to-"] {
  background-image: none !important;
  background-color: var(--bg) !important;
}

/* Also ensure main container backgrounds are dark */
.dark .container,
.dark .px-4,
.dark .py-16,
.dark .py-8 {
  background-color: transparent !important;
}

/* Strongest possible fallbacks to ensure dark background everywhere */
html.dark, html.dark body, html.dark #root, html.dark #root > div {
  background-color: var(--bg) !important;
  color: var(--text) !important;
}

.dark .min-h-screen { background-color: var(--bg) !important; }

/* Neutralize specific gradient stop utilities used in the project */
.dark .from-gray-50, .dark .via-white, .dark .to-red-50, .dark .from-gray-50\:to-red-50 {
  background-image: none !important;
  background-color: var(--bg) !important;
}

/* Also neutralize 'bg-gradient-to-br from-gray-50 via-white to-red-50' compound selectors */
.dark .bg-gradient-to-br.from-gray-50.via-white.to-red-50 {
  background-image: none !important;
  background-color: var(--bg) !important;
}


/* Components */
@layer components {
  .btn {
    @apply inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors px-4 py-2 disabled:pointer-events-none disabled:opacity-50;
  }

  .btn-primary {
    @apply btn bg-blue-600 text-white hover:bg-blue-700;
  }

  .btn-secondary {
    @apply btn bg-gray-200 text-gray-900 hover:bg-gray-300;
  }

  .btn-outline {
    @apply btn border border-gray-300 bg-white text-gray-700 hover:bg-gray-50;
  }

  .input {
    @apply flex w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-blue-500 disabled:cursor-not-allowed disabled:opacity-50;
  }

  .card {
    @apply rounded-lg border border-gray-200 bg-white shadow-sm;
    background-color: var(--card-bg);
    color: var(--text);
  }

  .card-header {
    @apply flex flex-col space-y-1.5 p-6 pb-4;
  }

  .card-title {
    @apply text-lg font-semibold leading-none tracking-tight text-gray-900;
  }

  .card-content {
    @apply p-6 pt-0;
  }

  .spinner {
    @apply animate-spin rounded-full border-2 border-gray-300 border-t-blue-600;
  }
}

/* Drag and drop styles */
.dropzone {
  @apply relative border-2 border-dashed border-gray-300 rounded-lg p-8 text-center hover:border-gray-400 transition-colors;
}

.dropzone.dragover {
  @apply border-blue-500 bg-blue-50;
}

.dropzone input {
  @apply absolute inset-0 w-full h-full opacity-0 cursor-pointer;
}

/* Utility: hide scrollbar but keep scrolling functional
   Usage: add `hide-scrollbar` to any scrollable container. This hides
   native scrollbars across modern browsers while preserving scroll.
   Example: <div className="overflow-auto hide-scrollbar">...</div>
*/
.hide-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.hide-scrollbar::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
}

/* Hide scrollbar on the document viewport when applied to <html> or <body>.
   Use: document.documentElement.classList.add('hide-scrollbar') to hide the page scrollbar.
*/
html.hide-scrollbar, body.hide-scrollbar, .hide-scrollbar-all {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
  overflow: overlay; /* keep scrolling behavior consistent */
}

html.hide-scrollbar::-webkit-scrollbar, body.hide-scrollbar::-webkit-scrollbar, .hide-scrollbar-all::-webkit-scrollbar {
  display: none; /* Chrome, Safari, Opera */
  width: 0;
  height: 0;
}

/* Force white backgrounds/borders for components that must stay light regardless of theme */
.force-white {
  background-color: #ffffff !important;
  border-color: #f3f4f6 !important;
  color: inherit;
}
